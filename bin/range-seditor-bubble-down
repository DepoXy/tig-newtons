#!/usr/bin/env bash
# vim:tw=0:ts=2:sw=2:et:norl:ft=bash
# Author: Landon Bouma (landonb &#x40; retrosoft &#x2E; com)
# Project: https://github.com/depoxy/tig-newtons#🍎
# License: MIT. Please find more in the LICENSE file.

# DEV: Uncomment to show rebase-todo before and after:
#  DX_SHOW_TODO=true
DX_SHOW_TODO=${DX_SHOW_TODO:-false}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# SYNC_ME: The two bubble editors are similar:
#   meld range-seditor-bubble-down range-seditor-bubble-up &

# Git passes todo path, e.g., /proj/.git/rebase-merge/git-rebase-todo
range_seditor_bubble_down () {
  local rebase_todo_path="$1"

  # Git-rebase prints a line without a newline:
  #   hint: Waiting for your editor to close the file...
  # So do that now.
  echo

  # Load `range_command_print_target_match`, `print_todo_maybe`.
  local tnewtons_bin="$(dirname "$0")"
  . "${tnewtons_bin}/range-command-common.sh"

  print_todo_maybe "${rebase_todo_path}" "before"

  local rebase_cmd="$(range_command_print_command)"
  local target_rev="$(range_command_print_target_object)"
  local target_match="$(range_command_print_target_match)"

  # DEV: This'd be your error.
  [ -z "${rebase_cmd}" ] && >&2 echo "ERROR: What's command?" && exit 1 || true

  # If 'squash' or 'fixup', caller included previous commit that
  # we need to 'squash' or 'fixup' into, in which case target_rev
  # gets placed second, not first.
  local is_first=1
  if [ "${rebase_cmd}" = "squash" ] || [ "${rebase_cmd}" = "fixup" ]; then
    is_first=0
  fi

  # Use state to print target_rev commit first.
  # - Also discard comment lines, who needs 'em.
  awk -i inplace "
    BEGIN { state = 0 }
    state == 0 && ( ${is_first} || FNR == 2 ) { print \"${rebase_cmd} ${target_rev}\"; state = 1; }
    \$0 ~ ${target_match} { next; }
    \$0 ~ /^\$/ { next; }
    \$0 ~ /^#/ { next; }
    1" ${rebase_todo_path}

  print_todo_maybe "${rebase_todo_path}" "after"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

main () {
  range_seditor_bubble_down "$@"
}

if [ "$0" = "${BASH_SOURCE[0]}" ]; then
  main "$@"
fi

