# vim:tw=0:ts=2:sw=2:et:norl:ft=conf
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/tig-newtons#üçé
# License: MIT. Please find more in the LICENSE file.

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Order commits topologically
set commit-order = topo

# Do not read Git's color settings
#  set git-colors = no

# Scroll XX% of the view width
#  set horizontal-scroll = 33%
set horizontal-scroll = 25%

# Blame lines from other files
set blame-options = -C -C -C

# Wrap branch names with () and tags with <>
# Default:
#  [feature-branch] {remote/feature-branch} commit message
# Via reference-format:
#  (feature-branch) [remote/feature-branch] commit message
set reference-format = (branch) <tag> [remote]

# Configure blame view columns using command spanning multiple lines
set blame-view = \
      date:default \
      author:abbreviated \
      file-name:auto \
      id:yes,color \
      line-number:yes,interval=5 text

# Choose character graphics for revision history/ancestry lines
#  ascii|default|utf-8|<bool>
# E.g., to disable graphics characters:
#  set line-graphics = no
# The UTF-8 graphics seems most pleasing to the eye.
set line-graphics = utf-8

# Number of spaces per tab
#  tab-size = 8

# Whether to show staged and unstaged changes in the main view.
#  set show-changes = no
#  set show-changes = true

set ignore-case = smart-case

# 2020-10-21: Repair tig blame to work with git-smart .gitconfig.
# - The git-smart .gitconfig suppresses the 'a/' and 'b/' path prefixes
#   to make it easy to double-click and copy paths from terminal session.
#     https://github.com/landonb/git-smart#üí°
# - But tig blame looks upwards from the cursor for the a/ and b/ paths
#   to get the blame paths.
# - I.e., with the cursor in a diff hunk, press 'b', and tig looks
#   backward lines for the a/ and b/ files with which to run blame.
#   - What a nifty feature! But git-smart inadvertently breaks it.
#     Here we restore it.
# 2023-01-16: Note this breaks tig's built-in 'e' and :edit commands,
# which do not expect the a/ or b/ prefix. We fix (replace) the 'e'
# command below; but this setting leaves the :edit command broken.
# (But if you're like me, you almost always open in 'v' gVim.)
set diff-options = --src-prefix=a/ --dst-prefix=b/

# Some of the tig-newton commands shell-out and rebase,
# so ensure tig updates the view after any command runs.
# - Values: manual|auto|after-command|periodic|<bool>
set refresh-mode = after-command

# Show merge commit diff. REFER:
# https://stackoverflow.com/questions/25967014/how-to-get-proper-diff-of-merge-commit-in-tig
set diff-options = --diff-merges=m

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

